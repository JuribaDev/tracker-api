name: Java CI with Maven

on:
  push:
    branches: [ main, stag, dev ]
  pull_request:
    branches: [ main, stag, dev ]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven
      - name: Install Dependencies
        run: mvn dependency:resolve

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven
      - name: Create JWT Key Files
        run: |
          echo "${{ secrets.JWT_PUBLIC_KEY }}" > src/main/resources/app.pub
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > src/main/resources/app.key
      - name: Run Tests
        run: mvn test

  security-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven
      - name: Create JWT Key Files
        run: |
          echo "${{ secrets.JWT_PUBLIC_KEY }}" > src/main/resources/app.pub
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > src/main/resources/app.key
      - name: OWASP Dependency-Check
        run: mvn org.owasp:dependency-check-maven:check -Dnvd.api.key=${{ secrets.NVD_API_KEY }}
      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create JWT Key Files
        run: |
            echo "${{ secrets.JWT_PUBLIC_KEY }}" > src/main/resources/app.pub
            echo "${{ secrets.JWT_PRIVATE_KEY }}" > src/main/resources/app.key

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Build project
        run: mvn clean install -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3